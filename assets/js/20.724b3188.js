(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{298:function(a,e,t){"use strict";t.r(e);var r=t(11),s=Object(r.a)({},(function(){var a=this,e=a._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"常见面试题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常见面试题"}},[a._v("#")]),a._v(" 常见面试题")]),a._v(" "),e("h2",{attrs:{id:"_1、什么是webpack-它的作用是什么"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1、什么是webpack-它的作用是什么"}},[a._v("#")]),a._v(" 1、什么是webpack？它的作用是什么？")]),a._v(" "),e("p",[a._v("Webpack是一个Javascript的静态模块打包器，可以将多个模块打包成一个或多个bundle，主要用于前端工程化和模块化开发")]),a._v(" "),e("h2",{attrs:{id:"_2、webpack的核心概念有哪些"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2、webpack的核心概念有哪些"}},[a._v("#")]),a._v(" 2、webpack的核心概念有哪些？")]),a._v(" "),e("p",[a._v("entry、output、loader、plugin、module、chunk、bundle、devServer、resolve")]),a._v(" "),e("h2",{attrs:{id:"_3、webpack的loader和plugin有什么区别-举例说明。"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3、webpack的loader和plugin有什么区别-举例说明。"}},[a._v("#")]),a._v(" 3、webpack的loader和plugin有什么区别？举例说明。")]),a._v(" "),e("p",[a._v("loader主要是解析不同类型的资源文件，对模块的源代码进行解析转换，例如将ES6+语法转换成ES5-语法，将less转换成css等。plugin主要是扩展webpack的功能，在构建的整个生命周期中进行自定义的处理。例如压缩、打包优化、资源管理等")]),a._v(" "),e("h2",{attrs:{id:"_4、webpack的打包过程是怎样的-可以详细描述一下吗"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4、webpack的打包过程是怎样的-可以详细描述一下吗"}},[a._v("#")]),a._v(" 4、webpack的打包过程是怎样的？可以详细描述一下吗？")]),a._v(" "),e("p",[a._v("打包过程主要分为三个阶段：解析、转换、输出。其中解析阶段将入口文件及其依赖文件解析成抽象语法树(AST)；转换阶段将抽象语法树转换成webpack能够理解的代码；输出阶段将转换后的代码生成bundle文件")]),a._v(" "),e("h2",{attrs:{id:"_5、webpack的热更新是什么-如何实现"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5、webpack的热更新是什么-如何实现"}},[a._v("#")]),a._v(" 5、webpack的热更新是什么？如何实现？")]),a._v(" "),e("p",[a._v("热更新是指修改代码可以不用重新启动整个服务，达到实时渲染效果。可通过配置dev-server启用")]),a._v(" "),e("h2",{attrs:{id:"_6、如何优化webpack的构建速度"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6、如何优化webpack的构建速度"}},[a._v("#")]),a._v(" 6、如何优化webpack的构建速度？")]),a._v(" "),e("p",[a._v("减少代码体积、压缩、tree-shaking、代码拆分、多线程打包、图片压缩、缓存")]),a._v(" "),e("h2",{attrs:{id:"_7、webpack中的tree-shaking是什么-有什么作用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7、webpack中的tree-shaking是什么-有什么作用"}},[a._v("#")]),a._v(" 7、webpack中的tree shaking是什么？有什么作用？")]),a._v(" "),e("p",[a._v("通过静态分析的方式，去除代码中没有用到的代码，以减少打包的体积，提高性能")]),a._v(" "),e("h2",{attrs:{id:"_8、webpack中的code-splitting是什么-如何使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_8、webpack中的code-splitting是什么-如何使用"}},[a._v("#")]),a._v(" 8、webpack中的code splitting是什么？如何使用？")]),a._v(" "),e("p",[a._v("把代码拆分成不同的chunk，并按需加载，提高页面加载速度")]),a._v(" "),e("h2",{attrs:{id:"_9、webpack中的chunk是什么-如何进行代码分割"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_9、webpack中的chunk是什么-如何进行代码分割"}},[a._v("#")]),a._v(" 9、webpack中的chunk是什么？如何进行代码分割？")]),a._v(" "),e("p",[a._v("chunk是指webpack打包后的代码块，可以是一个或多个文件。代码分割可以通过配置entry或使用import()实现")]),a._v(" "),e("h2",{attrs:{id:"_10、如何在webpack中使用es6的模块化语法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_10、如何在webpack中使用es6的模块化语法"}},[a._v("#")]),a._v(" 10、如何在webpack中使用ES6的模块化语法？")]),a._v(" "),e("p",[a._v("使用babel-loader来处理ES6的模块化语法")]),a._v(" "),e("h2",{attrs:{id:"_11、webpack中如何处理图片、字体等静态资源"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_11、webpack中如何处理图片、字体等静态资源"}},[a._v("#")]),a._v(" 11、webpack中如何处理图片、字体等静态资源？")]),a._v(" "),e("p",[a._v("通过相应的file-loader、url-loader、等来处理图片、字体、静态资源等")]),a._v(" "),e("h2",{attrs:{id:"_12、webpack的异步加载是什么-如何实现"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_12、webpack的异步加载是什么-如何实现"}},[a._v("#")]),a._v(" 12、webpack的异步加载是什么？如何实现？")]),a._v(" "),e("p",[a._v("通过import()或require.ensure()来实现")]),a._v(" "),e("h2",{attrs:{id:"_13、webpack如何处理css-有哪些常用的css处理工具"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_13、webpack如何处理css-有哪些常用的css处理工具"}},[a._v("#")]),a._v(" 13、webpack如何处理CSS？有哪些常用的CSS处理工具？")]),a._v(" "),e("p",[a._v("通过style-loader、css-loader等来处理")]),a._v(" "),e("h2",{attrs:{id:"_14、webpack如何处理typescript-有哪些常用的typescript处理工具"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_14、webpack如何处理typescript-有哪些常用的typescript处理工具"}},[a._v("#")]),a._v(" 14、webpack如何处理TypeScript？有哪些常用的TypeScript处理工具？")]),a._v(" "),e("p",[a._v("通过ts-loader、awesome-typescript-loader等loader来处理TypeScript。")]),a._v(" "),e("h2",{attrs:{id:"_15、webpack和其他构建工具-如gulp、grunt-有什么区别和优劣势"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_15、webpack和其他构建工具-如gulp、grunt-有什么区别和优劣势"}},[a._v("#")]),a._v(" 15、webpack和其他构建工具（如gulp、grunt）有什么区别和优劣势？")]),a._v(" "),e("p",[a._v("和其他的构建工具相比，具有更强的模块化能力，更多的扩展插件、更优秀的性能表现等优势、同时webpack配置较多、上手难度较大，开发时启动较慢")])])}),[],!1,null,null,null);e.default=s.exports}}]);