(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{276:function(t,e,v){t.exports=v.p+"assets/img/1682324807810.fbdea188.png"},277:function(t,e,v){t.exports=v.p+"assets/img/1682330505446.9def19e8.png"},293:function(t,e,v){"use strict";v.r(e);var s=v(11),_=Object(s.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"vue常见面试题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue常见面试题"}},[t._v("#")]),t._v(" Vue常见面试题")]),t._v(" "),e("h2",{attrs:{id:"响应式原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#响应式原理"}},[t._v("#")]),t._v(" 响应式原理")]),t._v(" "),e("p",[t._v("Vue2是通过Object.defineProperty()方法实现的，Vue3换成Proxy进行实现。")]),t._v(" "),e("p",[t._v("原理：vue初始化组件的时候对data对象的属性添加属性描述符get和set方法，获取属性的时候会触发get方法，设置属性的时候会触发set方法，于是我们就可以在get方法中收集依赖，在set方法中进行通知依赖更新即可实现响应式原理。")]),t._v(" "),e("p",[t._v("vue2使用defineProperty的缺点：")]),t._v(" "),e("p",[t._v("1、不能跟踪数组的变化，需要重新定义数组的原型来达到响应式")]),t._v(" "),e("p",[t._v("2、无法检测对象属性的添加和删除")]),t._v(" "),e("p",[t._v("3、深度监听需要递归，对性能影响较大")]),t._v(" "),e("p",[t._v("vue3使用Proxy的优势：")]),t._v(" "),e("p",[t._v("1、基于Proxy和Reflect，可以原生监听数组的变化、可以监听对象属性的添加和删除")]),t._v(" "),e("p",[t._v("2、不需要一次性便利data属性，提高性能")]),t._v(" "),e("p",[t._v("3、Proxy是ES6新增的语法，较老的浏览器不支持")]),t._v(" "),e("p",[t._v("参考：https://juejin.cn/post/6982001553540382733")]),t._v(" "),e("h2",{attrs:{id:"模板编译原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#模板编译原理"}},[t._v("#")]),t._v(" 模板编译原理")]),t._v(" "),e("p",[t._v("Vue本质是将标签当成字符串来处理的，这里Vue是通过借助mustache模板解析来对模板字符串进行处理，是将模板字符串转为AST语法树，最后AST变成渲染函数，然后渲染函数生成虚拟节点，虚拟节点再进行diff算法，将虚拟DOM转为真实DOM，而成渲染到界面。")]),t._v(" "),e("p",[t._v("模板 => 解析成抽象语法树(AST) => 优化(optimize) => 生成(generate)")]),t._v(" "),e("p",[t._v("解析AST：词法分析、语法分析为AST")]),t._v(" "),e("p",[t._v("优化：遍历抽象语法树，为每个节点做静态标记，标记是否为静态便签。以至于每次重新渲染的时候不需要重新为静态子树创建新节点、每次虚拟DOM的打补丁的时候可跳过")]),t._v(" "),e("p",[t._v("静态节点：文本节点、节点上没有v-bind、v-for、v-if等指令、非组件")]),t._v(" "),e("p",[t._v("生成：将AST转换成render函数格式的数据")]),t._v(" "),e("p",[e("img",{attrs:{src:v(276),alt:"1682324807810"}})]),t._v(" "),e("h2",{attrs:{id:"diff算法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#diff算法"}},[t._v("#")]),t._v(" Diff算法")]),t._v(" "),e("p",[t._v("**由来：**当我们改动某个数据的时候，如果直接渲染到真实的dom上会引起整个dom树的重绘和重排，为了避免每次都更新整个页面，diff算法帮助我们计算出修改的dom，避免更新全部dom节点")]),t._v(" "),e("p",[t._v("当数据发生改变的时候，set方法会调用Dep.notify通知所有的订阅者Watcher，订阅者就会调用patch给真实的DOM打补丁，更新相应的视图。")]),t._v(" "),e("img",{staticStyle:{zoom:"80%"},attrs:{src:v(277),alt:"1682330505446"}})])}),[],!1,null,null,null);e.default=_.exports}}]);